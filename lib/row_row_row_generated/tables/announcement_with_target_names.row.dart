// Generated by row_row_row tool
// Auto-generated file. Do not modify.
import 'dart:convert';

class AnnouncementWithTargetNamesRow {
  static const field = (
    id: 'id',
    title: 'title',
    content: 'content',
    createdBy: 'created_by',
    createdAt: 'created_at',
    deletedAt: 'deleted_at',
    personal: 'personal',
    routeData: 'route_data',
    creatorName: 'creator_name',
    roleIds: 'role_ids',
    roleNames: 'role_names',
    userIds: 'user_ids',
    userNames: 'user_names',
    groupIds: 'group_ids',
    groupNames: 'group_names',
    allTargetIds: 'all_target_ids',
  );

  final String? id;
  final String? title;
  final String? content;
  final String? createdBy;
  final DateTime? createdAt;
  final DateTime? deletedAt;
  final bool? personal;
  final Map<String, dynamic>? routeData;
  final String? creatorName;
  final dynamic? roleIds;
  final dynamic? roleNames;
  final dynamic? userIds;
  final dynamic? userNames;
  final dynamic? groupIds;
  final dynamic? groupNames;
  final dynamic? allTargetIds;

  const AnnouncementWithTargetNamesRow({
    this.id,
    this.title,
    this.content,
    this.createdBy,
    this.createdAt,
    this.deletedAt,
    this.personal,
    this.routeData,
    this.creatorName,
    this.roleIds,
    this.roleNames,
    this.userIds,
    this.userNames,
    this.groupIds,
    this.groupNames,
    this.allTargetIds,
  });

  factory AnnouncementWithTargetNamesRow.fromJson(Map<String, dynamic> json) {
    return AnnouncementWithTargetNamesRow(
      id: json[field.id],
      title: json[field.title],
      content: json[field.content],
      createdBy: json[field.createdBy],
      createdAt: json[field.createdAt] == null ? null : DateTime.tryParse(json[field.createdAt] ?? ''),
      deletedAt: json[field.deletedAt] == null ? null : DateTime.tryParse(json[field.deletedAt] ?? ''),
      personal: json[field.personal],
      routeData: json[field.routeData] == null ? null : (json[field.routeData] is String ? jsonDecode(json[field.routeData]) : Map<String, dynamic>.from(json[field.routeData])),
      creatorName: json[field.creatorName],
      roleIds: json[field.roleIds],
      roleNames: json[field.roleNames],
      userIds: json[field.userIds],
      userNames: json[field.userNames],
      groupIds: json[field.groupIds],
      groupNames: json[field.groupNames],
      allTargetIds: json[field.allTargetIds],
    );
  }

  Map<String, dynamic> toJson() {
    return {
      field.id: id,
      field.title: title,
      field.content: content,
      field.createdBy: createdBy,
      field.createdAt: createdAt?.toIso8601String(),
      field.deletedAt: deletedAt?.toIso8601String(),
      field.personal: personal,
      field.routeData: routeData,
      field.creatorName: creatorName,
      field.roleIds: roleIds,
      field.roleNames: roleNames,
      field.userIds: userIds,
      field.userNames: userNames,
      field.groupIds: groupIds,
      field.groupNames: groupNames,
      field.allTargetIds: allTargetIds,
    };
  }
}
