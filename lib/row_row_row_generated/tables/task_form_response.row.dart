// Generated by row_row_row tool
// Auto-generated file. Do not modify.
class TaskFormResponseRow {
  static const field = (
    id: 'id',
    answer: 'answer',
    createdAt: 'created_at',
    images: 'images',
    question: 'question',
    task: 'task',
    checkedBox: 'checked_box',
    sysNotes: 'sys_notes',
    questionText: 'question_text',
    photoConverted: 'photo_converted',
  );

  final String id;
  final String? answer;
  final DateTime createdAt;
  final dynamic? images;
  final String? question;
  final String? task;
  final dynamic? checkedBox;
  final String? sysNotes;
  final String? questionText;
  final bool photoConverted;

  const TaskFormResponseRow({
    required this.id,
    this.answer,
    required this.createdAt,
    this.images,
    this.question,
    this.task,
    this.checkedBox,
    this.sysNotes,
    this.questionText,
    required this.photoConverted,
  });

  factory TaskFormResponseRow.fromJson(Map<String, dynamic> json) {
    return TaskFormResponseRow(
      id: json[field.id] as String,
      answer: json[field.answer],
      createdAt: DateTime.parse(json[field.createdAt]),
      images: json[field.images],
      question: json[field.question],
      task: json[field.task],
      checkedBox: json[field.checkedBox],
      sysNotes: json[field.sysNotes],
      questionText: json[field.questionText],
      photoConverted: json[field.photoConverted] as bool,
    );
  }

  Map<String, dynamic> toJson() {
    return {
      field.id: id,
      field.answer: answer,
      field.createdAt: createdAt.toIso8601String(),
      field.images: images,
      field.question: question,
      field.task: task,
      field.checkedBox: checkedBox,
      field.sysNotes: sysNotes,
      field.questionText: questionText,
      field.photoConverted: photoConverted,
    };
  }
}
