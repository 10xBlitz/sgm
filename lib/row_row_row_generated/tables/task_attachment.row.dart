// Generated by row_row_row tool
// Auto-generated file. Do not modify.
class TaskAttachmentRow {
  static const field = (
    id: 'id',
    name: 'name',
    isImage: 'is_image',
    task: 'task',
    createdAt: 'created_at',
    uploadedBy: 'uploaded_by',
    url: 'url',
    asanaGid: 'asana_gid',
    fileName: 'file_name',
    folderName: 'folder_name',
    bucketName: 'bucket_name',
  );

  final String id;
  final String? name;
  final bool isImage;
  final String? task;
  final DateTime createdAt;
  final String? uploadedBy;
  final String url;
  final String? asanaGid;
  final String? fileName;
  final String? folderName;
  final String? bucketName;

  const TaskAttachmentRow({
    required this.id,
    this.name,
    required this.isImage,
    this.task,
    required this.createdAt,
    this.uploadedBy,
    required this.url,
    this.asanaGid,
    this.fileName,
    this.folderName,
    this.bucketName,
  });

  factory TaskAttachmentRow.fromJson(Map<String, dynamic> json) {
    return TaskAttachmentRow(
      id: json[field.id] as String,
      name: json[field.name],
      isImage: json[field.isImage] as bool,
      task: json[field.task],
      createdAt: DateTime.parse(json[field.createdAt]),
      uploadedBy: json[field.uploadedBy],
      url: json[field.url] as String,
      asanaGid: json[field.asanaGid],
      fileName: json[field.fileName],
      folderName: json[field.folderName],
      bucketName: json[field.bucketName],
    );
  }

  Map<String, dynamic> toJson() {
    return {
      field.id: id,
      field.name: name,
      field.isImage: isImage,
      field.task: task,
      field.createdAt: createdAt.toIso8601String(),
      field.uploadedBy: uploadedBy,
      field.url: url,
      field.asanaGid: asanaGid,
      field.fileName: fileName,
      field.folderName: folderName,
      field.bucketName: bucketName,
    };
  }
}
