// Generated by row_row_row tool
// Auto-generated file. Do not modify.
class ProcedureRow {
  static const field = (
    id: 'id',
    titleEng: 'title_eng',
    titleKor: 'title_kor',
    createdAt: 'created_at',
    commission: 'commission',
    totalPrice: 'total_price',
    category: 'category',
    description: 'description',
    explanation: 'explanation',
  );

  final String id;
  final String? titleEng;
  final String? titleKor;
  final DateTime createdAt;
  final double? commission;
  final double? totalPrice;
  final String? category;
  final String? description;
  final String? explanation;

  const ProcedureRow({
    required this.id,
    this.titleEng,
    this.titleKor,
    required this.createdAt,
    this.commission,
    this.totalPrice,
    this.category,
    this.description,
    this.explanation,
  });

  factory ProcedureRow.fromJson(Map<String, dynamic> json) {
    return ProcedureRow(
      id: json[field.id] as String,
      titleEng: json[field.titleEng],
      titleKor: json[field.titleKor],
      createdAt: DateTime.parse(json[field.createdAt]),
      commission: json[field.commission] == null ? null : (json[field.commission] as num?)?.toDouble(),
      totalPrice: json[field.totalPrice] == null ? null : (json[field.totalPrice] as num?)?.toDouble(),
      category: json[field.category],
      description: json[field.description],
      explanation: json[field.explanation],
    );
  }

  Map<String, dynamic> toJson() {
    return {
      field.id: id,
      field.titleEng: titleEng,
      field.titleKor: titleKor,
      field.createdAt: createdAt.toIso8601String(),
      field.commission: commission,
      field.totalPrice: totalPrice,
      field.category: category,
      field.description: description,
      field.explanation: explanation,
    };
  }
}
